(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{592:function(t,a,s){"use strict";s.r(a);var n=s(8),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-线程概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-线程概述"}},[t._v("#")]),t._v(" 1. 线程概述")]),t._v(" "),s("h3",{attrs:{id:"_1-1-线程相关概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-线程相关概念"}},[t._v("#")]),t._v(" 1.1 线程相关概念")]),t._v(" "),s("h4",{attrs:{id:"_1-1-1-进程和线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-进程和线程"}},[t._v("#")]),t._v(" 1.1.1 进程和线程")]),t._v(" "),s("p",[t._v("进程"),s("code",[t._v("Process")]),t._v("：是计算机中的程序关于某数据集合上的一次运行活动，是操作系统进行资源分配与调度的基本单位。")]),t._v(" "),s("p",[t._v("线程"),s("code",[t._v("Thread")]),t._v("：是进程的一个执行单元。一个线程就是进程中一个单一顺序的控制流，进程的一个执行分支。")]),t._v(" "),s("p",[t._v("进程是线程的容器，一个进程至少有一个线程，一个进程中也可以有多个线程")]),t._v(" "),s("h4",{attrs:{id:"_1-1-2-主线程与子线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-主线程与子线程"}},[t._v("#")]),t._v(" 1.1.2 主线程与子线程")]),t._v(" "),s("p",[t._v("主线程与子线程："),s("code",[t._v("JVM")]),t._v("启动时会创建一个主线程，该主线程负责执行"),s("code",[t._v("main")]),t._v("方法，主线程就是运行"),s("code",[t._v("main")]),t._v("方法的线程。")]),t._v(" "),s("p",[s("code",[t._v("Java")]),t._v("中的线程不是孤立的，线程之间存在一些联系，如果"),s("code",[t._v("A")]),t._v("线程中创建了"),s("code",[t._v("B")]),t._v("线程，称"),s("code",[t._v("B")]),t._v("线程为"),s("code",[t._v("A")]),t._v("线程的子线程，相应的"),s("code",[t._v("A")]),t._v("线程就是"),s("code",[t._v("B")]),t._v("线程的父线程")]),t._v(" "),s("h4",{attrs:{id:"_1-1-3-并发与并行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-3-并发与并行"}},[t._v("#")]),t._v(" 1.1.3 并发与并行")]),t._v(" "),s("p",[t._v("假设有三个任务，"),s("code",[t._v("A")]),t._v("、"),s("code",[t._v("B")]),t._v("、"),s("code",[t._v("C")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("串行")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/dingwanli/picture/raw/master/20210610161348.png",alt:""}})]),t._v(" "),s("p",[t._v("串行"),s("code",[t._v("Sequential")]),t._v("，先做任务"),s("code",[t._v("A")]),t._v("，完成后再做任务"),s("code",[t._v("B")]),t._v("，完成"),s("code",[t._v("B")]),t._v("后在做任务"),s("code",[t._v("C")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("并发")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/dingwanli/picture/raw/master/20210610162038.png",alt:""}})]),t._v(" "),s("p",[t._v("并发"),s("code",[t._v("Concurrent")]),t._v("，各任务交替执行，但同一时间只有一个任务在执行")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("并行")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/dingwanli/picture/raw/master/20210610162431.png",alt:""}})]),t._v(" "),s("p",[t._v("并行"),s("code",[t._v("Parallel")]),t._v("，三个任务同时开始，总耗时取决于需要时间最长的那个任务")]),t._v(" "),s("h3",{attrs:{id:"_1-2-线程的创建与启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-线程的创建与启动"}},[t._v("#")]),t._v(" 1.2 线程的创建与启动")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("Java")]),t._v("中，创建一个线程就是创建一个"),s("code",[t._v("Thread")]),t._v("类(子类)的对象(实例)")]),t._v(" "),s("p",[s("code",[t._v("Thread")]),t._v("类有两个常用的构造方法："),s("code",[t._v("Thread()")]),t._v("与"),s("code",[t._v("Thread(Runnable runnable)")]),t._v("，两种方法没有本质的区别")]),t._v(" "),s("h4",{attrs:{id:"_1-2-1-继承thread类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-继承thread类"}},[t._v("#")]),t._v(" 1.2.1 继承Thread类")]),t._v(" "),s("p",[t._v("调用线程类的"),s("code",[t._v("start()")]),t._v("方法来启动线程，启动线程的实质就是请求"),s("code",[t._v("JVM")]),t._v("运行相应的线程，这个线程具体什么时候执行由线程调度器"),s("code",[t._v("Scheduler")]),t._v("决定(新开启的线程会执行"),s("code",[t._v("run")]),t._v("方法)")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"主线程"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" thread "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启动线程")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyThread")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"自定义的线程 继承Thread类"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_1-2-2-实现runnable接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-实现runnable接口"}},[t._v("#")]),t._v(" 1.2.2 实现Runnable接口")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"主线程"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" thread "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启动线程")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyThread")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"自定义的线程 实现Runnable接口"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_1-3-线程的常用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-线程的常用方法"}},[t._v("#")]),t._v(" 1.3 线程的常用方法")]),t._v(" "),s("h4",{attrs:{id:"_1-3-1-currentthread"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-currentthread"}},[t._v("#")]),t._v(" 1.3.1 currentThread")]),t._v(" "),s("p",[t._v("获取当前线程，"),s("code",[t._v("Java")]),t._v("中的任何一段代码都是执行在某个线程当中的，执行当前代码的线程就是当前线程")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("同一段代码可能被不同的线程调用执行，因此当前线程是一个相对的概念")]),t._v(" "),s("h4",{attrs:{id:"_1-3-2-setname-getname"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-setname-getname"}},[t._v("#")]),t._v(" 1.3.2 setName()/getName()")]),t._v(" "),s("p",[s("code",[t._v("thread.setName()")]),t._v("设置线程名称")]),t._v(" "),s("p",[s("code",[t._v("thread.getName()")]),t._v("返回线程名称")]),t._v(" "),s("p",[t._v("通过设置线程名称，有助于程序调试和提高上程序的可读性")]),t._v(" "),s("h4",{attrs:{id:"_1-3-3-isalive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-3-isalive"}},[t._v("#")]),t._v(" 1.3.3 isAlive")]),t._v(" "),s("p",[t._v("判断当前线程是否处于活动状态")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAlive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("活动状态就是线程已启动并且尚未终止")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"主线程"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" thread "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启动线程")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAlive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("interrupt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyThread")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"线程: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 正在执行"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_1-3-4-sleep"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-4-sleep"}},[t._v("#")]),t._v(" 1.3.4 sleep")]),t._v(" "),s("p",[t._v("让当前线程休眠指定的毫秒数")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("毫秒数"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"_1-3-5-getid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-5-getid"}},[t._v("#")]),t._v(" 1.3.5 getId()")]),t._v(" "),s("p",[t._v("获取线程的唯一标识")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"_1-3-6-yield"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-6-yield"}},[t._v("#")]),t._v(" 1.3.6 yield")]),t._v(" "),s("p",[t._v("放弃当前"),s("code",[t._v("CPU")]),t._v("的使用权，转让给其他线程")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"_1-3-7-setpriority"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-7-setpriority"}},[t._v("#")]),t._v(" 1.3.7 setPriority")]),t._v(" "),s("p",[t._v("设置线程的优先级，"),s("code",[t._v("java")]),t._v("线程的优先级的取值范围为"),s("code",[t._v("1~10")]),t._v("，如果超出这个范围会抛出异常")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPriority")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("线程优先级本质上只是给线程调度器一个提示信息，以便于调度器决定先调度哪些线程。注意并不能保证优先级高的线程先运行。如果优先级设置不当或者滥用可能会导致某些线程无法得到运行，即产生了"),s("strong",[t._v("线程饥饿")])]),t._v(" "),s("p",[t._v("优先级不是越高越好，一般情况下默认即可")]),t._v(" "),s("p",[t._v("线程的优先级具有继承性，如果在"),s("code",[t._v("A")]),t._v("线程中创建了"),s("code",[t._v("B")]),t._v("线程，则"),s("code",[t._v("B")]),t._v("线程的优先级与"),s("code",[t._v("A")]),t._v("线程是一样的")]),t._v(" "),s("h4",{attrs:{id:"_1-3-8-interrupt"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-8-interrupt"}},[t._v("#")]),t._v(" 1.3.8 interrupt")]),t._v(" "),s("p",[t._v("中断线程，注意调用"),s("code",[t._v("interrupt()")]),t._v("方法仅仅是在当前线程打一个停止标志，并不是真正停止线程")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("interrupt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"主线程"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" thread "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启动线程")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAlive")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("interrupt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyThread")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"线程: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 正在执行"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isInterrupted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断是否有中断标志")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"_1-3-9-setdaemon"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-9-setdaemon"}},[t._v("#")]),t._v(" 1.3.9 setDaemon()")]),t._v(" "),s("p",[t._v("将当前线程设置守护线程，")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDaemon")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("code",[t._v("java")]),t._v("中的线程分为用户线程和守护线程，守护线程是为其他线程提供服务的线程，如垃圾回收器"),s("code",[t._v("GC")]),t._v("就是一个典型的守护线程。")]),t._v(" "),s("p",[t._v("守护线程不能单独运行，当"),s("code",[t._v("JVM")]),t._v("中没有其他用户线程的时候，守护线程会自动退出")]),t._v(" "),s("h3",{attrs:{id:"_1-4-线程的生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-线程的生命周期"}},[t._v("#")]),t._v(" 1.4 线程的生命周期")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gitee.com/dingwanli/picture/raw/master/20210610200229.png",alt:""}})]),t._v(" "),s("p",[t._v("线程的生命周期就是线程对象的生老病死，即线程的状态，线程的声明周期可以通过"),s("code",[t._v("getState()")]),t._v("方法获得")]),t._v(" "),s("p",[t._v("线程的状态是一个枚举类，定义在"),s("code",[t._v("Thread")]),t._v("内部")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("State")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    NEW"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\t\t\n    RUNNABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\t\t\n    BLOCKED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    WAITING"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    TIMED_WAITING"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    TERMINATED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",[s("li",[s("code",[t._v("NEW")]),t._v("新建状态，创建了线程对象，在调用start()启动之前的状态")]),t._v(" "),s("li",[s("code",[t._v("RUNNABLE")]),t._v("可运行状态，它是一个复合状态，包含READY和RUNNING两个状态。READY状态表示该线程可以被线程调度器进行调度，调度之后处于RUNNING状态，RUNNING表示该状态正在执行，Thread.yield()方法可以把线程由RUNNING状态转换为READY状态")]),t._v(" "),s("li",[s("code",[t._v("BLOCKED")]),t._v("阻塞状态，线程发起阻塞的"),s("code",[t._v("I/O")]),t._v("操作，或者申请由其他线程占用的独占资源，线程会转换为"),s("code",[t._v("BLOCKED")]),t._v("阻塞状态。处于阻塞状态的线程不会占用"),s("code",[t._v("CPU")]),t._v("资源。当阻塞的"),s("code",[t._v("I/O")]),t._v("操作执行完成后，或者线程获得了它申请的资源，现车给你可以转换为"),s("code",[t._v("RUNNABLE")])]),t._v(" "),s("li",[s("code",[t._v("WAITING")]),t._v("等待状态，线程执行了"),s("code",[t._v("Object.wait()")]),t._v("，"),s("code",[t._v("thread.join()")]),t._v("方法会吧线程转换为"),s("code",[t._v("WAITING")]),t._v("等待状态，执行"),s("code",[t._v("Object.notify()")]),t._v("方法，或者加入的线程执行完毕，当前线程会转换为"),s("code",[t._v("RUNNABLE")]),t._v("状态")]),t._v(" "),s("li",[s("code",[t._v("TIMED_WAITING")]),t._v("状态，与"),s("code",[t._v("WAITING")]),t._v("状态类似，都是等待状态。区别在于处在该状态的线程不会无限的等待，如果线程没有在指定的时间范围内完成期望的操作，该线程自动转换为"),s("code",[t._v("RUNNABLE")])]),t._v(" "),s("li",[s("code",[t._v("TERMINATED")]),t._v("线程结束处于终止状态")])]),t._v(" "),s("h3",{attrs:{id:"_1-5-多线程编程的优势与存储的风险"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-多线程编程的优势与存储的风险"}},[t._v("#")]),t._v(" 1.5 多线程编程的优势与存储的风险")]),t._v(" "),s("p",[t._v("多线程具有以下优势：")]),t._v(" "),s("ol",[s("li",[t._v("提高系统的吞吐量"),s("code",[t._v("Throughout")]),t._v("，多线程编程可以使一个进程有多个并发("),s("code",[t._v("concurrent")]),t._v("，即同时进行的)的操作")]),t._v(" "),s("li",[t._v("提高响应性"),s("code",[t._v("Responsiveness")]),t._v("，"),s("code",[t._v("Web")]),t._v("服务器会采用一些专门的线程负责用户的请求处理，缩短了用户的等待时间")]),t._v(" "),s("li",[t._v("充分利用多核"),s("code",[t._v("Multicore")]),t._v("处理器资源")])]),t._v(" "),s("p",[t._v("风险：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("线程安全"),s("code",[t._v("Thread safe")]),t._v("问题，多线程共享数据时，如果没有采用正确的并发访问控制措施，就可能会产生数据一致性问题，如读脏读(过期的数据)，如丢失数据更新")])]),t._v(" "),s("li",[s("p",[t._v("线程活性"),s("code",[t._v("thread liveness")]),t._v("问题，由于程序滋生的缺陷或者由资源稀缺性导致线程一直处于非"),s("code",[t._v("RUNNABLE")]),t._v("状态，这就是线程活性问题，常见的活性故障有以下几种")]),t._v(" "),s("p",[t._v("死锁"),s("code",[t._v("Deadlock")]),t._v("：鹬蚌相争")]),t._v(" "),s("p",[t._v("锁死"),s("code",[t._v("Lockout")]),t._v("：类似于睡美人故事中王子挂了")]),t._v(" "),s("p",[t._v("活锁"),s("code",[t._v("Livelock")]),t._v("：类似于小猫咬自己的尾巴")]),t._v(" "),s("p",[t._v("饥饿"),s("code",[t._v("Starvation")]),t._v("：类似于健壮的雏鸟总是从母鸟嘴中抢到的食物，弱小的小鸟抢不到食物")])]),t._v(" "),s("li",[s("p",[t._v("上下文切换"),s("code",[t._v("Contenxt Switch")]),t._v("：处理器从执行一个线程切换在执行另外一个线程")])]),t._v(" "),s("li",[s("p",[t._v("可靠性，可能会由一个线程导致"),s("code",[t._v("JVM")]),t._v("意外终止，其他的线程也无法执行")])])]),t._v(" "),s("h2",{attrs:{id:"_2-线程安全问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-线程安全问题"}},[t._v("#")]),t._v(" 2. 线程安全问题")]),t._v(" "),s("p",[t._v("非线程安全主要是指多个线程对同一个对象的实例变量进行操作时，会出现值被更改，值不同步的情况")]),t._v(" "),s("p",[t._v("线程安全问题表现为三个方面："),s("strong",[t._v("原子性")]),t._v("，"),s("strong",[t._v("可见性")]),t._v("和"),s("strong",[t._v("有序性")])]),t._v(" "),s("h3",{attrs:{id:"_2-1-原子性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-原子性"}},[t._v("#")]),t._v(" 2.1 原子性")]),t._v(" "),s("p",[t._v("原子"),s("code",[t._v("Atomic")]),t._v("就是不可分割的意思，原子操作的不可分割有两层")]),t._v(" "),s("ol",[s("li",[t._v("访问(读、写)某个共享变量的操作从其他线程来看，该操作要么已经执行完毕，要么尚未发生，即其他线程看不到当前操作的中间结果")]),t._v(" "),s("li",[t._v("访问同一组共享变量的原子操作是不能够交错的")])]),t._v(" "),s("p",[s("code",[t._v("Java")]),t._v("有两种方式实现原子性：一种是使用锁，另一种利用处理器的"),s("code",[t._v("CAS(Compare and Swap)")]),t._v("指令")]),t._v(" "),s("ol",[s("li",[t._v("锁具有排他性，保证共享变量在某一时刻只能被一个线程访问。")]),t._v(" "),s("li",[s("code",[t._v("CAS")]),t._v("指令直接在硬件(处理器和内存)层次上实现，可以看作是硬件锁")])]),t._v(" "),s("h3",{attrs:{id:"_2-2-可见性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-可见性"}},[t._v("#")]),t._v(" 2.2 可见性")]),t._v(" "),s("p",[t._v("在多线程环境中，一个线程对某个共享变量进行更新之后，后续其他的线程可能无法立即读到这个更新的结果，这就是线程安全问题的另一种形式：可见性"),s("code",[t._v("visibility")])]),t._v(" "),s("p",[t._v("如果一个线程对共享变量更新后，后续访问该变量的其他线程可以读到更新的结果，称这个线程给对共享变量的更新读其他线程可见，否则称这个线程对共享变量的更新对其他线程不可见")]),t._v(" "),s("p",[t._v("多线程程序因为可见性问题可能导致其他线程读取到了旧数据(脏数据)")]),t._v(" "),s("h3",{attrs:{id:"_2-3-有序性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-有序性"}},[t._v("#")]),t._v(" 2.3 有序性")]),t._v(" "),s("p",[t._v("有序性"),s("code",[t._v("Ordering")]),t._v("是指在什么情况下，一个处理器运行的一个线程所执行的内存访问操作在另一个处理器运行的其他线程看来是乱序的"),s("code",[t._v("Out of Order")])]),t._v(" "),s("p",[t._v("乱序是指内存访问操作的顺序看起来发生了变化")]),t._v(" "),s("p",[t._v("在多核处理器的环境下，编写的顺序结构，这种操作执行的顺序可能是没有保障的")]),t._v(" "),s("ol",[s("li",[t._v("编译器可能会改变两个操作的先后顺序")]),t._v(" "),s("li",[t._v("处理器也可能不会按照目标代码的顺序执行")])]),t._v(" "),s("p",[t._v("与目标代码指定的顺序可能不一样，这种现象称为重排序。重排序是对内存访问有序操作的一种优化，可以在不影响单线程程序正确的情况下提升程序的性能。但是，可能对多线程程序的正确性产生影响，即可能导致线程安全问题")]),t._v(" "),s("p",[t._v("可以把重排序分为指令重排序两种")]),t._v(" "),s("ol",[s("li",[t._v("指令重排序主要是由"),s("code",[t._v("JIT")]),t._v("编译器处理器引起的，指程序顺序与执行顺序不一样")]),t._v(" "),s("li",[t._v("存储子系统重排序是由高速缓存，写缓冲器引起的")])])])}),[],!1,null,null,null);a.default=e.exports}}]);