(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{592:function(a,s,e){"use strict";e.r(s);var t=e(8),r=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h3",{attrs:{id:"概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[a._v("#")]),a._v(" 概念")]),a._v(" "),e("p",[e("strong",[a._v("镜像")]),a._v("：镜像是一种轻量级、可执行的独立软件包，用来打包软件运行环境和基于运行环境开发的软件，它包含运行某个软件所需的所有内容，包括代码、运行时、库、环境变量和配置文件")]),a._v(" "),e("h3",{attrs:{id:"镜像命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像命令"}},[a._v("#")]),a._v(" 镜像命令")]),a._v(" "),e("ol",[e("li",[e("p",[a._v("列出本地的所有镜像")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker images\n")])])]),e("p",[a._v("参数")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("-a 列出所有镜像包括中间仓库\n-q 只显示镜像的ID\n--digests 显示镜像的摘要信息\n--no-trunc 显示镜像的完整ID\n")])])]),e("p",[a._v("表头信息")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("REPOSITORY: 表示镜像的仓库源\nTAG: 镜像的标签\nIMAGE ID: 镜像ID\nCREATED: 镜像创建的时间\nSIZE: 镜像的大小\nDIGEST: 镜像摘要\n")])])])]),a._v(" "),e("li",[e("p",[e("code",[a._v("docker search 镜像名称")]),a._v(" 在dockerhub上搜索镜像")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker search mysql\n")])])]),e("p",[a._v("参数")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker search -s 30 mysql\n列出star不小于30的mysql镜像\n\ndocker search --no-trunc mysql\n显示完整描述\n\n--automated \n只列出automated build类型的镜像\n")])])])]),a._v(" "),e("li",[e("p",[e("code",[a._v("docker pull 镜像:tag")]),a._v(" 拉取指定tag的镜像 tag可省略默认"),e("code",[a._v("latest")]),a._v(" 最新版")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker pull mysql\n")])])])]),a._v(" "),e("li",[e("p",[e("code",[a._v("docker rmi 镜像:tag")]),a._v(" 删除指定镜像 默认删除最新版")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker rmi hello-world\n")])])]),e("p",[a._v("参数")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("-f\ndocker rmi -f hello-world\n强制删除\n")])])]),e("p",[a._v("组合命令清空所有镜像")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker rmi -f $(docker images -qa)\n")])])])])]),a._v(" "),e("h3",{attrs:{id:"容器命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器命令"}},[a._v("#")]),a._v(" 容器命令")]),a._v(" "),e("ol",[e("li",[e("p",[e("code",[a._v("docker run 参数 镜像")]),a._v(" 以某镜像启动一个容器")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker run -it cedef0cc26e8\n")])])]),e("p",[a._v("参数")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("-i 以交互模式运行容器，通常与-t同时使用\n-t 为容器重新分配一个伪输入终端\n-P 随机端口映射\n-p 指定端口映射 -p 主机端口:容器端口\n-d 后台运行容器，并返回容器ID，即启动守护式容器\n")])])])]),a._v(" "),e("li",[e("p",[a._v("运行指定容器到指定端口")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker run -it -p 8888:8080 容器ID\n")])])])]),a._v(" "),e("li",[e("p",[e("code",[a._v("docker ps")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("查找当前docker中正在运行的容器\n")])])]),e("p",[a._v("参数")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("上一次运行的容器\ndocker ps -l \n\n以上三次运行的容器\ndocker ps -n 3\n\n只显示容器的编号\ndocker ps -lp\n")])])])]),a._v(" "),e("li",[e("p",[e("code",[a._v("exit")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("退出并停止此容器\n")])])])]),a._v(" "),e("li",[e("p",[a._v("退出不停止容器")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("CTRL+P+Q\n")])])])]),a._v(" "),e("li",[e("p",[a._v("启动已经关闭过的容器")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker start ID或容器名\n")])])])]),a._v(" "),e("li",[e("p",[a._v("重启容器")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker restart ID或容器名\n")])])])]),a._v(" "),e("li",[e("p",[a._v("停止容器")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker stop 容器ID或容器名\n")])])])]),a._v(" "),e("li",[e("p",[a._v("强制停止容器")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker kill 容器ID或容器名\n")])])])]),a._v(" "),e("li",[e("p",[a._v("删除已停止的容器")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker rm 容器ID或容器名\n")])])])]),a._v(" "),e("li",[e("p",[e("strong",[a._v("注意")])]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker run -d 容器ID\ndocker容器后台运行\n但是docker容器后台运行就必须有一个前台进程\n容器运行的容器如果不是那些一直挂起的容器(比如运行top,tail)就会自动退出\n")])])])]),a._v(" "),e("li",[e("p",[a._v("日志")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker logs -t 容器ID\n\n-t 时间戳\n-f 实时查看日志\n--tail 3 查看末尾三条日志\n")])])])]),a._v(" "),e("li",[e("p",[a._v("查看容器内的进程")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker top 容器ID\n")])])])]),a._v(" "),e("li",[e("p",[a._v("查看当前容器的结构")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker inspect 容器ID\n")])])])]),a._v(" "),e("li",[e("p",[a._v("进入当前正在运行的容器")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker attach 容器ID\n")])])])]),a._v(" "),e("li",[e("p",[a._v("在某个容器内执行某条命令")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker exec -t 容器ID ls -l /tmp(并没有进入容器)\n\ndocker exec -i 容器ID /bin/bash 进入容器\n")])])])]),a._v(" "),e("li",[e("p",[a._v("文件拷贝")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker cp 容器ID:文件路径 拷贝到主机的路径\n")])])])]),a._v(" "),e("li",[e("p",[a._v("提交当前容器作为一个新的镜像")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('docker commit -a="作者" -m="描述" 容器ID 命名空间/镜像名字:tag\n')])])])])]),a._v(" "),e("h3",{attrs:{id:"容器数据卷"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器数据卷"}},[a._v("#")]),a._v(" 容器数据卷")]),a._v(" "),e("p",[a._v("卷就是目录或文件，存在于一个或多个容器中，由docker挂载到容器，但不属于联合文件系统，一次能够绕过Union File System提供一些用于持续存储或共享数据的特性")]),a._v(" "),e("p",[a._v("卷的设计目的就是数据的持久化，完全独立于容器的生存周期，因此Docker不会在容器删除时删除其挂载的数据卷")]),a._v(" "),e("p",[a._v("特点：")]),a._v(" "),e("p",[a._v("1：数据卷可在容器之间共享或宠用数据")]),a._v(" "),e("p",[a._v("2：卷中的更改可以直接生效")]),a._v(" "),e("p",[a._v("3：数据卷中的更改不会包含在镜像的更新中")]),a._v(" "),e("p",[a._v("4：数据卷的声明周期一直持续到没有容器使用它为止")]),a._v(" "),e("ol",[e("li",[e("p",[a._v("添加容器数据卷")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker run -it -v /宿主机绝对路径:/容器内目录 镜像名\n")])])]),e("p",[a._v("容器停止后主机修改的数据在容器重新打开后依旧会生效")])]),a._v(" "),e("li",[e("p",[a._v("添加数据卷的权限")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker run -it -v /宿主机绝对路径:/容器绝对路径:文件权限 镜像名\n\n文件权限 是对容器而言，主机不影响\nro 只读\n")])])])])]),a._v(" "),e("h3",{attrs:{id:"dockerfile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[a._v("#")]),a._v(" DockerFile")]),a._v(" "),e("p",[e("strong",[a._v("概念")])]),a._v(" "),e("p",[a._v("DockerFile是用来构建Docker镜像的构建文件，是由一系列的命令和参数构成的脚本")]),a._v(" "),e("p",[e("strong",[a._v("结构")]),a._v("：以centos8为例")]),a._v(" "),e("div",{staticClass:"language-dockerfile extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# scratch 所有镜像的根镜像")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" scratch\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ADD")]),a._v(" CentOS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("8"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("Container"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("8.1.1911"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("20200113.3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("layer.x86_64.tar.xz  /\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("LABEL")]),a._v(" org.label"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("schema.schema"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("version="),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1.0"')]),a._v(" \\\n    org.label"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("schema.name="),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"CentOS Base Image"')]),a._v(" \\\n    org.label"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("schema.vendor="),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"CentOS"')]),a._v(" \\\n    org.label"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("schema.license="),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"GPLv2"')]),a._v(" \\\n    org.label"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("schema.build"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("date="),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"20200114"')]),a._v(" \\\n    org.opencontainers.image.title="),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"CentOS Base Image"')]),a._v(" \\\n    org.opencontainers.image.vendor="),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"CentOS"')]),a._v(" \\\n    org.opencontainers.image.licenses="),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"GPL-2.0-only"')]),a._v(" \\\n    org.opencontainers.image.created="),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"2020-01-14 00:00:00-08:00"')]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 运行镜像时的默认命令")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CMD")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/bin/bash"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  \n")])])]),e("p",[e("strong",[a._v("基础")])]),a._v(" "),e("ol",[e("li",[a._v("每个保留字指令必须为大写字母且后面至少要跟一个参数")]),a._v(" "),e("li",[a._v("指令按照从上到下，顺序执行")]),a._v(" "),e("li",[a._v("#表示注释")]),a._v(" "),e("li",[a._v("每条指令都会创建一个新的镜像层，并对镜像进行提交")])]),a._v(" "),e("p",[e("strong",[a._v("DockerFile的构建过程")])]),a._v(" "),e("ol",[e("li",[a._v("docker从基础镜像运行一个容器")]),a._v(" "),e("li",[a._v("执行一条指令并对容器做出修改")]),a._v(" "),e("li",[a._v("执行类似于docker commit的操作提交一个新的镜像层")]),a._v(" "),e("li",[a._v("docker再基于刚提交的镜像运行一个新容器")]),a._v(" "),e("li",[a._v("执行dockerfile中的下一条指令直到所有指令都执行完成DockerFIle")])]),a._v(" "),e("p",[e("strong",[a._v("保留字指令")])]),a._v(" "),e("ol",[e("li",[e("code",[a._v("FROM")]),a._v(" 基础镜像，当前新镜像是基于哪个镜像的")]),a._v(" "),e("li",[e("code",[a._v("MAINTAINER")]),a._v("镜像维护者的姓名和邮箱地址")]),a._v(" "),e("li",[e("code",[a._v("RUN")]),a._v("容器构建时需要运行的命令")]),a._v(" "),e("li",[e("code",[a._v("EXPOSE")]),a._v("当前容器对外暴露出的端口号")]),a._v(" "),e("li",[e("code",[a._v("WORKDIR")]),a._v("容器完成之后停留的工作目录")]),a._v(" "),e("li",[e("code",[a._v("ENV")]),a._v("用来在构建镜像过程中设置环境变量")]),a._v(" "),e("li",[e("code",[a._v("ADD")]),a._v("将宿主机目录下的文件拷贝进镜像且ADD命令会自动处理URL和解压tar压缩包")]),a._v(" "),e("li",[e("code",[a._v("COPY")]),a._v("类似于ADD只会将源文件拷贝的目标文件 COPY src dest")]),a._v(" "),e("li",[e("code",[a._v("VOLUME")]),a._v("容器数据卷，用于数据保存和持久化工作")]),a._v(" "),e("li",[e("code",[a._v("CMD")]),a._v(" 指定一个容器启动时要运行的命令 可以有多个CMD命令，但只会有一个生效，CMD 会被之后docker run 之后的参数替换")]),a._v(" "),e("li",[e("code",[a._v("ENTRYPOINT")]),a._v(" 类似于CMD但命令不会替换而是追加")]),a._v(" "),e("li",[e("code",[a._v("ONBUILD")]),a._v("当构建一个被继承的DockerFile时运行命令，父镜像在被子继承后父镜像的onbuild被触发")])]),a._v(" "),e("p",[e("strong",[a._v("步骤")])]),a._v(" "),e("ol",[e("li",[e("p",[a._v("进入根目录新建"),e("code",[a._v("mydockerfile")]),a._v(" 文件夹")])]),a._v(" "),e("li",[e("p",[a._v("书写dockerfile")])]),a._v(" "),e("li",[e("p",[a._v("build后生成新的镜像")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker build -f /dockerfile目录 -t 命名空间/镜像名称 .\n")])])])])]),a._v(" "),e("p",[e("strong",[a._v("dockerfile实例")])]),a._v(" "),e("div",{staticClass:"language-dockerfile extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 指定基础镜像")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" centos\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 指定作者")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("MAINTAINER")]),a._v(" valid<123@163.com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置环境变量")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("ENV")]),a._v(" MYPATH /user/local\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 设置工作目录")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WORKDIR")]),a._v(" $MYPATH\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 安装vim")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" yum "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("y install vim\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 安装 net-tools")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" yum "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("y install net"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("tools\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 暴露80端口")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("EXPOSE")]),a._v(" 80\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CMD")]),a._v(" echo $MYPATH\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CMD")]),a._v(" echo "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"succcess --------"')]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CMD")]),a._v(" /bin/bash\n")])])]),e("h3",{attrs:{id:"容器数据继承共享"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容器数据继承共享"}},[a._v("#")]),a._v(" 容器数据继承共享")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker run -it --name 容器1\ndocker run -it --name 容器2 --volumes-from 容器1 镜像\ndocker run -it --name 容器3 --volumes-from 容器1 镜像\n\n容器1，2，3之间数据卷共享\n数据卷的生命周期一直持续到没有容器使用它为止\n")])])]),e("h3",{attrs:{id:"docker常用镜像安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker常用镜像安装"}},[a._v("#")]),a._v(" Docker常用镜像安装")]),a._v(" "),e("ol",[e("li",[e("p",[a._v("mysql")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker run -p 3306:3306 --name mysql -v /valid/mysql/conf:/etc/mysql/conf.d -v /valid/mysql/logs:/logs -v /valid/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql\n")])])]),e("p",[a._v("进入mysql的容器")]),a._v(" "),e("div",{staticClass:"language-cmd extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker exec -it mysqlID /bin/bash\n")])])]),e("p",[a._v("导出msql容器的数据到宿主机")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker exec 容器ID sh -c ' exec mysqldump --all-databases -uroot -p\"123456\" ' > /valid/mysql/all-data.sql\n")])])])]),a._v(" "),e("li",[e("p",[a._v("redis")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("docker run -p 6379:6379 -v /valid/redis/data:/data -v /valid/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf -d redis redis-serve /usr/local/etc/redis/redis.conf --appendonly yes\n")])])])])]),a._v(" "),e("h3",{attrs:{id:"镜像推送"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像推送"}},[a._v("#")]),a._v(" 镜像推送")]),a._v(" "),e("ol",[e("li",[e("p",[a._v("本地提交容器版本")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('docker commit -a 作者 -m "描述" 容器ID 镜像名字\n')])])])])]),a._v(" "),e("h3",{attrs:{id:"镜像提交至阿里云镜像仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像提交至阿里云镜像仓库"}},[a._v("#")]),a._v(" 镜像提交至阿里云镜像仓库")]),a._v(" "),e("ol",[e("li",[e("p",[a._v("登陆")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("sudo docker login --username=小猫的夕阳 registry.cn-hangzhou.aliyuncs.com\n")])])])]),a._v(" "),e("li",[e("p",[a._v("取别名")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("sudo docker tag [ImageId] registry.cn-hangzhou.aliyuncs.com/dingwanli/mc:[镜像版本号]\n")])])])]),a._v(" "),e("li",[e("p",[a._v("提交")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("sudo docker push registry.cn-hangzhou.aliyuncs.com/dingwanli/mc:[镜像版本号]\n")])])])]),a._v(" "),e("li",[e("p",[a._v("拉取镜像")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("sudo docker pull registry.cn-hangzhou.aliyuncs.com/dingwanli/mc:[镜像版本号]\n")])])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);