(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{577:function(_,v,e){"use strict";e.r(v);var t=e(8),a=Object(t.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h3",{attrs:{id:"_1-简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[_._v("#")]),_._v(" 1. 简介")]),_._v(" "),e("p",[e("code",[_._v("B+")]),_._v("树是"),e("code",[_._v("B")]),_._v("树的变体，常用于数据库和操作系统的文件系统中")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("MySQL")]),_._v("数据库的索引就是基于"),e("code",[_._v("B+")]),_._v("树实现的")])]),_._v(" "),e("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://gitee.com/dingwanli/picture/raw/master/20210503114624.png"}}),_._v(" "),e("p",[e("code",[_._v("B+")]),_._v("树的特点")]),_._v(" "),e("ul",[e("li",[e("p",[_._v("分为内部节点(非叶子)、叶子节点2种节点")]),_._v(" "),e("p",[_._v("内部节点只存储"),e("code",[_._v("key")]),_._v("，不存储具体数据")]),_._v(" "),e("p",[_._v("叶子节点存储"),e("code",[_._v("key")]),_._v("和具体数据")])]),_._v(" "),e("li",[e("p",[_._v("所有的叶子节点形成一条有序链表")])]),_._v(" "),e("li",[e("p",[e("code",[_._v("m")]),_._v("阶"),e("code",[_._v("B+")]),_._v("树非根节点的元素数量"),e("code",[_._v("X")])]),_._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[_._v("m/2 <= x <= m\n")])])])])]),_._v(" "),e("h3",{attrs:{id:"_2-mysql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-mysql"}},[_._v("#")]),_._v(" 2. MySQL")]),_._v(" "),e("p",[_._v("为了减少"),e("code",[_._v("IO")]),_._v("操作数量，一般把一个节点的大小设计成最小读写单位的大小")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("MySQL")]),_._v("的存储引擎"),e("code",[_._v("InnoDB")]),_._v("的最小读写单位是"),e("code",[_._v("16K")])])]),_._v(" "),e("p",[_._v("相对于B树，"),e("code",[_._v("B+")]),_._v("树的优势是")]),_._v(" "),e("ul",[e("li",[_._v("每个节点存储的"),e("code",[_._v("key")]),_._v("数量更多，树的高度更低")]),_._v(" "),e("li",[_._v("所有的具体数据都存在叶子节点上，每次查询都要查到叶子节点，查询速度比较稳定")]),_._v(" "),e("li",[_._v("所有的叶子节点构成一个有序链表，做区间查询时更方便")])])])}),[],!1,null,null,null);v.default=a.exports}}]);